{"version":3,"sources":["components/Card.js"],"names":["arr","logResult","result","quotesData","quotes","push","apply","Object","_Users_devinc_Desktop_quote_machine_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_6__","logError","error","console","log","$","css","opacity","text","validateResponse","response","ok","Error","statusText","readResponseAsJSON","json","Card","props","_this","_Users_devinc_Desktop_quote_machine_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_devinc_Desktop_quote_machine_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_devinc_Desktop_quote_machine_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","copyText","bind","_Users_devinc_Desktop_quote_machine_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleClick","tweet","currentQuote","fetch","then","catch","randomQuote","Math","floor","random","length","quote","currentAuthor","author","animate","html","document","getElementById","disabled","setTimeout","$temp","append","val","select","execCommand","remove","url","window","self","top","e","inIframe","encodeURIComponent","open","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","id","class","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_9__","icon","faClipboard","onClick","faTwitterSquare","React","Component"],"mappings":"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","file":"static/js/3.c8ec271a.chunk.js","sourcesContent":["import React from 'react'\nimport $ from 'jquery'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faClipboard  } from '@fortawesome/free-solid-svg-icons'\nimport { faTwitterSquare } from '@fortawesome/free-brands-svg-icons'\n\n\nvar arr = []; //to store response from URL\n\n\n//HELPER FUNCTIONS____________________________________________________________\nfunction logResult(result) {\n    var quotesData = result.quotes;\n    arr.push(...quotesData);\n}\n\nfunction logError(error) {\n  console.log('Looks like there was a problem:', error);\n  $('#subs, #Q, #new-quote').css({opacity: 0});\n  var errorMsg = 'Oops! Looks like there was a problem. Please reload the page and try again.';\n  $('#text').text(errorMsg);\n}\n\nfunction validateResponse(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nfunction readResponseAsJSON(response) {\n  return response.json();\n}\n\n\nfunction fetchJSON() {\n  fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\n    .then(validateResponse)\n    .then(readResponseAsJSON)\n    .then(logResult)\n    .catch(logError);\n}\n//___________________________________---------------------------------------------------\n\nfunction openURL(url){\n  window.open(url, 'Share', 'width=550, height=400, toolbar=0, scrollbars=1 ,location=0 ,statusbar=0,menubar=0, resizable=0');\n}\n\nfunction inIframe () { try { return window.self !== window.top; } catch (e) { return true; } }\n\n\nclass Card extends React.Component{\n   constructor(props){\n     super(props);\n     this.copyText = this.copyText.bind(this);\n     this.handleClick = this.handleClick.bind(this);\n     this.tweet = this.tweet.bind(this);\n     this.currentQuote = \"Too many of us are not living our dreams because we are living our fears.\";\n  }\n\n  componentDidMount(){\n     fetchJSON();\n  }\n\n  handleClick(){\n      var  randomQuote = arr[Math.floor(Math.random() * arr.length)];\n      var  currentQuote = randomQuote.quote;\n      var  currentAuthor = randomQuote.author;\n      this.currentQuote = currentQuote;\n     $(\"#text, #author, #copy-quote, .card-wrapper\").animate(\n      { opacity: 0 },\n      2000,\n      function() {\n           $(this).animate({ opacity: 1}, 2000);\n           $('#text').text(currentQuote);\n           $('#author').html(currentAuthor);\n\n      }\n    );\n     document.getElementById('new-quote').disabled =  true;\n\n    //reenable the button after animation------------------------------\n    setTimeout(function() {\n        document.getElementById('new-quote').disabled =  false;\n      }, 4000);\n\n  }\n\n  //copy Quote-------------------------------------\n  copyText(){\n     var copyText = document.getElementById(\"text\");\n     var $temp = $(\"<input>\");\n     $(\"body\").append($temp);\n     $temp.val($(copyText).text()).select(); //copy the quote and append to input , then select the text\n     document.execCommand(\"copy\");//copy the selected text\n     $temp.remove();\n    $('.tooltiptext').css({opacity: 1}); //display copied tooltip text\n\n    //hide tooltip after 1s\n    setTimeout(function() {\n        $('.tooltiptext').css('opacity', 0);\n      }, 1000);\n   }\n\n\n tweet(){\n   if(!inIframe()) {\n      openURL('https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' + encodeURIComponent('\"' + this.currentQuote + '\"'));\n    }\n }\n\n\n\n  render(){\n    return (\n      <div className=\"card\">\n        <div id='Q'>Q</div>\n        <div id=\"text\">Too many of us are not living our dreams because we are living our fears.\n          </div>\n          <span class=\"tooltiptext\">Copied!</span>\n         <div id='subs'>\n            <div id='icons'>\n            <FontAwesomeIcon id=\"copy-quote\" icon={faClipboard} onClick={this.copyText} />\n            <FontAwesomeIcon id='tweet-quote' icon={faTwitterSquare} onClick={this.tweet}/>\n          </div>\n           <div id='author'>Les Brown</div>\n        </div>\n        <button id=\"new-quote\" onClick={this.handleClick}>New  Quote</button>\n      </div>\n    )\n  }\n}\n\n\nexport default Card;\n"],"sourceRoot":""}